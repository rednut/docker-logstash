filter {

  if [type] == "syslog" and [facility_label] == "security/authorization" {
    
    # pam_unix(sudo:session): session closed for user root
    # pam_unix(cron:session): session closed for user root
    # pam_unix(sudo:session): session opened for user root by (uid=0)
    grok {
        match => [ 
	    "message", "pam_unix\\(%{DATA:pam_program}:%{DATA:pam_event}\\): session %{DATA:pam_action} for user %{USER:pam_user}(?:%{SPACE}%{WORD:pam_by} \\(%{WORD:pam_by_obj}\\=%{NUMBER:pam_by_val}\\))?"
	]
	add_tag => [  "auth", "pam" ]
	tag_on_failure => [ ]
	break_on_match => true	
    }


    #  "pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=122.225.109.204 user=root"
    grok {
        match => [ 
     "message", "pam_unix\\(%{DATA:pam_program}:%{DATA:pam_event}\\): authentication failure; logname=%{DATA:pam_logname} uid=%{POSINT:pam_uid} euid=%{POSINT:pam_euid} tty=%{DATA:pam_tty} ruser=%{USERNAME:pam_ruser} rhost=%{IPORHOST:pam_rhost} user=%{USERNAME:pam_user}"
	]
	add_tag => [  "auth", "pam", "failure" ]
	add_field => [ "pam_message", "authentication failure" ]
	tag_on_failure => [ ]
	break_on_match => true	
    }

  }
}



