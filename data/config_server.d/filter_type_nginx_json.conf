
###
#
#
filter {

        if [type] == "nginx" or [program] == "nginx" {
	
		if "json" not in [tags] {
                	json {
                        	source => "message"
                        	add_tag => [ "nginx", "json", "access" ]
				remove_field => [ "message", "timestamp" ]
                        	add_field => [
                                	"clientip", "%{[remote_addr]}",
					"timestamp", "%{@timestamp}"
                                	#"request", "%{[request]}"
                                 ]
                	}


		}

		
                grok {
                        match => [
                                "request", "%{WORD:verb} %{URIPATH:uripath}(?:%{URIPARAM:uriparam})? HTTP/%{NUMBER:httpversion}"
                                ]
                        tag_on_failure => []
                        add_field => [
                                "message", "%{[http_host]} %{[request]} %{[status]}",
                                "clientip", "%{[remote_addr]}"
                                         ]
                }
                geoip {
                        source => "[remote_addr]"
                        target => "geoip"
                        add_tag => [ "geoip" ]
                        add_field => [
                           "[geoip][coordinates]", "%{[geoip][longitude]}",
                           "[geoip][coordinates]", "%{[geoip][latitude]}"
                         ]
                }
                mutate {
			replace => [ "type", "nginx" ]
                	convert => [
                        	"[geoip][coordinates]", "float",
                        	"bytes_sent", "integer",
                        	"body_bytes_sent", "integer",
                        	"[request_length]", "integer",
                        	"[connection]", "integer",
                        	"[connection_requests]", "integer",
                        	"[request_time]", "float",
                        	"[status]", "integer",
                        	"[upstream_response_time]", "float"
                      ]

                }
        }
}

